using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;

// Code scaffolded by EF Core assumes nullable reference types (NRTs) are not used or disabled.
// If you have enabled NRTs for your project, then un-comment the following line:
// #nullable disable

// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using petclinicFront.Models;
//
//    var duenosGrid = DuenosGrid.FromJson(jsonString);

namespace petclinicFront.Models
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class DuenosGrid
    {
        [JsonProperty("Dueno_Id", Required = Required.Always)]
        public int DuenoId { get; set; }

        [JsonProperty("Nombre", Required = Required.Always)]
        public string Nombre { get; set; }

        [JsonProperty("Apellido", Required = Required.Always)]
        public string Apellido { get; set; }

        [JsonProperty("Direccion", Required = Required.Always)]
        public string Direccion { get; set; }

        [JsonProperty("Ciudad", Required = Required.Always)]
        public string Ciudad { get; set; }

        [JsonProperty("Telefono", Required = Required.Always)]
        public string Telefono { get; set; }

        [JsonProperty("Mascotas", Required = Required.Always)]
        public string Mascotas { get; set; }
    }

    public partial class DuenosGrid
    {
        public static List<DuenosGrid> FromJson(string json) => JsonConvert.DeserializeObject<List<DuenosGrid>>(json, petclinicFront.Models.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this List<DuenosGrid> self) => JsonConvert.SerializeObject(self, petclinicFront.Models.Converter.Settings);
        public static string ToJson(this List<Dueno> self) => JsonConvert.SerializeObject(self, petclinicFront.Models.Converter.Settings);
        public static string ToJson(this Dueno self) => JsonConvert.SerializeObject(self, petclinicFront.Models.Converter.Settings);
        public static string ToJson(this Mascota self) => JsonConvert.SerializeObject(self, petclinicFront.Models.Converter.Settings);
        public static string ToJson(this Tipo self) => JsonConvert.SerializeObject(self, petclinicFront.Models.Converter.Settings);
        public static string ToJson(this Veterinario self) => JsonConvert.SerializeObject(self, petclinicFront.Models.Converter.Settings);
        public static string ToJson(this PreaprobacionRequest self) => JsonConvert.SerializeObject(self, petclinicFront.Models.Converter.Settings);
        public static string ToJson(this PreaprobacionResponse self) => JsonConvert.SerializeObject(self, petclinicFront.Models.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}

